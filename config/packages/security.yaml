security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Usuario
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            stateless: false
            json_login:
                check_path: /api/login
                username_path: username
                password_path: password
            context: main
            custom_authenticators: 
                - App\Security\CustomAuthenticator
            # json_login:
            #     check_path: /api/login
            #     username_path: username
            #     password_path: password
            logout:
                path: logout
                target: /login
            lazy: true
            provider: app_user_provider
            remember_me:
                secret: '%kernel.secret%' # required
                lifetime: 604800 # 1 week in seconds
                # by default, the feature is enabled by checking a
                # checkbox in the login form (see below), uncomment the
                # following line to always enable it.
                always_remember_me: true
            # stateless: true


            # entry_point: App\Security\AuthenticationEntryPoint



            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # access_decision_manager:
    #     strategy_service: App\Security\MyCustomAccessDecisionStrategy

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        #PUBLICAS
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/logout, roles: PUBLIC_ACCESS }
        - { path: ^/landing, roles: PUBLIC_ACCESS }
        - { path: ^/estabelecimento/cadastrar, roles: PUBLIC_ACCESS }
        - { path: ^/usuario/cadastrar, roles: PUBLIC_ACCESS }
        - { path: ^/assinatura/*, roles: PUBLIC_ACCESS }
        - { path: ^/pagamento/*, roles: PUBLIC_ACCESS }
        #Roles
        - { path: ^/*, roles: [IS_AUTHENTICATED] }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
