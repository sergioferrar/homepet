{% extends 'base.html.twig' %}

{% block stylesheets %}
{{ parent() }}
<style>
    .btn-secondary {
        background-color: #007bff;
        border-color: #007bff;
        font-weight: bold;
        border-radius: 20px;
        padding: 8px 16px;
    }
    .btn-secondary:hover {
        background-color: #0056b3;
        border-color: #0056b3;
    }
    .dropdown-menu {
        border-radius: 12px;
        box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2);
    }
    #modalCliente .modal-dialog {
        position: fixed !important;
        top: 0;
        right: 0;
        margin: 0;
        height: 100vh;
        max-width: 500px;
        width: 100% !important;
        z-index: 2000 !important;
    }
    #modalCliente .modal-content {
        height: 100vh;
        border-radius: 30px 0 0 30px;
        background-color: #007bff !important;
        color: white !important;
        padding: 20px;
        overflow-y: auto;
    }
    #modalCliente .modal-body p,
    #modalCliente .modal-body ul {
        margin-bottom: 10px;
        border-bottom: 1px solid rgba(255,255,255,0.2);
        padding-bottom: 8px;
    }
    #modalCliente strong {
        color: #ffffff;
    }
</style>
{% endblock %}

{% block body %}
<div class="container mt-5">
    <h1>Clientes</h1>

    <form method="get" action="{{ path('cliente_index') }}" class="mb-3">
        <div class="input-group">
            <input type="text" name="search" class="form-control" placeholder="Pesquisar por nome, e-mail ou telefone" value="{{ app.request.get('search') }}">
            <button class="btn btn-primary" type="submit">Buscar</button>
        </div>
    </form>

    <a href="{{ path('cliente_novo') }}" class="btn btn-secondary mb-3">+ Novo Cliente</a>

    <table class="table table-bordered table-hover datatable">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Email</th>
                <th>Telefone</th>
                <th>A√ß√µes</th>
            </tr>
        </thead>
        <tbody>
            {% for cliente in clientes %}
                {% if cliente.nome is defined and cliente.email is defined and cliente.telefone is defined %}
                    <tr>
                        <td>
                            <a href="#" class="text-primary abrir-modal-cliente"
                               data-bs-toggle="offcanvas"
                               data-bs-target="#offcanvasScrolling"
                               aria-controls="offcanvasScrolling"
                               data-id="{{ cliente.id }}">
                               {{ cliente.nome }}
                            </a>
                        </td>
                        <td>{{ cliente.email ?? '-' }}</td>
                        <td>{{ cliente.telefone ?? '-' }}</td>
                        <td>
                            <div class="dropdown">
                                <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                    A√ß√£o
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a href="{{ path('cliente_agendamentos', {'id': cliente.id}) }}" class="dropdown-item">Ver Agendamentos</a></li>
                                    <li><a href="{{ path('cliente_editar', {'id': cliente.id}) }}" class="dropdown-item">Editar</a></li>
                                    <li>
                                        <form method="post" action="{{ path('cliente_deletar', {'id': cliente.id}) }}" class="d-inline">
                                            <button type="submit" class="dropdown-item text-danger"
                                                    onclick="return confirm('Tem certeza que deseja deletar este cliente?')">
                                                Deletar
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                {% else %}
                    {# ignora linha quebrada #}
                {% endif %}
            {% endfor %}


        </tbody>
    </table>
</div>


<div class="offcanvas offcanvas-end" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id="offcanvasScrolling" aria-labelledby="offcanvasScrollingLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="offcanvasScrollingLabel">Offcanvas with body scrolling</h5>
    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body">
    
                <p><strong>Nome:</strong> <span id="clienteNome"></span></p>
                <p><strong>Email:</strong> <span id="clienteEmail"></span></p>
                <p><strong>Telefone:</strong> <span id="clienteTelefone"></span></p>
                <p><strong>Endere√ßo:</strong> <span id="clienteEndereco"></span></p>
                <p><strong>Bairro:</strong> <span id="clienteBairro"></span></p>
                <p><strong>Cidade:</strong> <span id="clienteCidade"></span></p>
                <p><strong>Pend√™ncias:</strong> <span id="clientePendencias" class="badge bg-warning text-dark"></span></p>
                <p><strong>Pets:</strong> <span id="clientePets"></span></p>
                <div id="clienteAgendamentosBlock">
                    <h5 class="mt-3">üóì √öltimos Agendamentos</h5>
                    <ul id="clienteAgendamentos"></ul>
                </div>
  </div>
</div>

{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function () {
    // Modal lateral do cliente
    document.querySelectorAll('.abrir-modal-cliente').forEach(function (el) {
        el.addEventListener('click', function (e) {
            e.preventDefault();
            const clienteId = this.getAttribute('data-id');
            fetch('{{ path('cliente_detalhes', {'id': 'ID'}) }}'.replace('ID', clienteId))
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'ok') {
                        const c = data.cliente;
                        document.getElementById('clienteNome').innerText = c.nome || '-';
                        document.getElementById('clienteEmail').innerText = c.email || '-';
                        document.getElementById('clienteTelefone').innerText = c.telefone || '-';
                        document.getElementById('clienteEndereco').innerText = [c.rua, c.numero, c.complemento].filter(Boolean).join(', ') || '-';
                        document.getElementById('clienteBairro').innerText = c.bairro || '-';
                        document.getElementById('clienteCidade').innerText = c.cidade || '-';
                        document.getElementById('clientePendencias').innerText = c.temFinanceiroPendente ? 'Sim' : 'N√£o';

                        const pets = c.pets && c.pets.length ? c.pets.map(p => `üê∂ ${p.nome}`).join(', ') : 'Nenhum pet';
                        document.getElementById('clientePets').innerText = pets;

                        const agendamentosList = document.getElementById('clienteAgendamentos');
                        agendamentosList.innerHTML = '';

                        if (c.agendamentos && c.agendamentos.length > 0) {
                            c.agendamentos.forEach(function (ag) {
                                const li = document.createElement('li');
                                li.textContent = `üìÖ ${ag.data} - üê∂ ${ag.pet} - üõÅ ${ag.servico}`;
                                agendamentosList.appendChild(li);
                            });
                        } else {
                            agendamentosList.innerHTML = '<li>Nenhum agendamento recente.</li>';
                        }

                        document.getElementById('clienteAgendamentosBlock').style.display = 'block';

                    } else {
                        alert('Erro: ' + data.mensagem);
                    }
                })
                .catch(error => {
                    console.error('Erro ao buscar cliente:', error);
                    alert('Erro ao carregar os dados do cliente.');
                });
        });
    });

    // Inicializa√ß√£o do DataTable
    const tabelas = document.querySelectorAll(".datatable");

    if (!window.simpleDatatables || !window.simpleDatatables.DataTable) {
        console.error("simple-datatables n√£o foi carregado.");
        return;
    }

    tabelas.forEach((el) => {
        try {
            new simpleDatatables.DataTable(el, {
                perPageSelect: [5, 10, 15, ["Todos", -1]],
                columns: [
                    {
                        select: 2,
                        sortSequence: ["desc", "asc"]
                    },
                    {
                        select: 3,
                        cellClass: "green",
                        headerClass: "red"
                    }
                ]
            });
        } catch (e) {
            console.error("Erro ao inicializar DataTable:", e);
        }
    });
});
</script>
{% endblock %}

