{% extends 'base.html.twig' %}

{% block page_title %}<i class="bi bi-calendar-check me-2"></i> Agendamentos{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .card-title { color: #004080; font-weight: bold; }
    .tabela-container input.form-control-md { max-width: 450px; margin-bottom: 1.5rem; }
    .card-item { transition: box-shadow 0.2s; }
    .card-item:hover { box-shadow: 0 0 0 4px #e5eefe; }
    .dropdown-menu .dropdown-item.text-danger { color: #dc3545 !important; }
    .text-danger.fw-bold { color: #c00 !important; font-weight: bold !important; }
    .text-success.fw-bold { color: #007f00 !important; font-weight: bold !important; }
</style>
{% endblock %}

{% block body %}
<div class="container mt-5">
    <div class="tabela-container container-fluid px-2">
        <div class="row my-3">
            <div class="col-12">
                <input type="text" id="searchInputAgendamento" class="form-control form-control-md" placeholder="üîç Pesquisar por pet, tutor, servi√ßo, data..." />
            </div>
        </div>
        <div class="demo-inline-spacing mb-3">
            <a href="{{ path('agendamento_novo') }}">
                <button type="button" class="btn btn-primary">
                    <span class="icon-base bx bx-plus icon-sm me-2"></span> Novo Agendamento
                </button>
            </a>
        </div>
        <div id="cardContainerAgendamento" class="row gy-3">
            {% for agendamento in agendamentos %}
                {% set cor_texto = '' %}
                {% if agendamento.metodo_pagamento == 'pendente' %}
                    {% set cor_texto = 'text-danger fw-bold' %}
                {% elseif agendamento.concluido %}
                    {% set cor_texto = 'text-success fw-bold' %}
                {% endif %}
                <div class="col-12 card-item" data-search="{{ agendamento.pet_nome }} {{ agendamento.dono_nome }} {{ agendamento.servico_nome }} {{ agendamento.horaChegada|date('d/m/Y') }}">
                    <div class="card shadow-lg border-0 rounded-3">
                        <div class="card-body p-3">
                            <div class="d-flex justify-content-between align-items-center flex-wrap gap-2">
                                <div class="flex-grow-1">
                                    <h5 class="card-title mb-1 {{ cor_texto }}">
                                        <i class="bx bx-calendar"></i>
                                        {{ agendamento.horaChegada ? agendamento.horaChegada|date('d/m/Y') : 'Sem data' }}
                                        <span class="ms-2"><i class="bx bx-time"></i> {{ agendamento.horaChegada ? agendamento.horaChegada|date('H:i') : '--:--' }}</span>
                                    </h5>
                                    <p class="card-text text-muted mb-1 d-flex align-items-center gap-1">
                                        <i class="bx bx-user"></i> <b>Tutor:</b>
                                        <a href="javascript:void(0);" class="text-decoration-none buscar-cliente {{ cor_texto }}" data-dono-id="{{ agendamento.dono_id }}">
                                            {{ agendamento.dono_nome }}
                                        </a>
                                    </p>
                                    <p class="card-text text-muted mb-1 d-flex align-items-center gap-1">
                                        <i class="bx bx-paw"></i> <b>Pet:</b> {{ agendamento.pet_nome }}
                                    </p>
                                    <p class="card-text text-muted mb-1 d-flex align-items-center gap-1">
                                        <i class="bx bx-briefcase"></i> <b>Servi√ßo:</b> {{ agendamento.servico_nome }}
                                    </p>
                                    <p class="card-text text-muted mb-1 d-flex align-items-center gap-1">
                                        <i class="bx bx-car"></i> <b>T√°xi Dog:</b> {{ agendamento.taxi_dog ? 'Sim' : 'N√£o' }}
                                        {% if agendamento.taxi_dog %}
                                            <span class="ms-2"><b>Taxa:</b> R$ {{ agendamento.taxa_taxi_dog }}</span>
                                        {% endif %}
                                    </p>
                                    <p class="card-text text-muted mb-1 d-flex align-items-center gap-1">
                                        <i class="bx bx-credit-card"></i> <b>Pagamento:</b>
                                        {{ agendamento.metodo_pagamento|capitalize }}
                                    </p>
                                </div>
                                <div class="d-flex align-items-center gap-1">
                                    <div class="dropdown">
                                        <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                            A√ß√£o
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end">
                                            <li>
                                                <a href="{{ path('agendamento_editar', {'id': agendamento.id}) }}" class="dropdown-item">
                                                    Editar
                                                </a>
                                            </li>
                                            <li>
                                                <a href="javascript:void(0);" class="dropdown-item open-concluir-modal" data-id="{{ agendamento.id }}" data-action="{{ path('agendamento_concluir', {'id': agendamento.id}) }}">
                                                    Concluir Pagamento
                                                </a>
                                            </li>
                                            <li>
                                                <a href="javascript:void(0);" class="dropdown-item reload-form text-danger" data-id="{{ agendamento.id }}" data-action="{{ path('agendamento_executar_acao', {'id': agendamento.id, 'acao': 'deletar'}) }}">
                                                    Deletar
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            {% else %}
                <div class="col-12">
                    <div class="alert alert-info text-center mb-0">Nenhum agendamento encontrado.</div>
                </div>
            {% endfor %}
        </div>
        <div class="row mt-4">
            <div class="col text-center">
                <nav aria-label="Pagina√ß√£o">
                    <ul id="paginationAgendamento" class="pagination justify-content-center mb-0"></ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<!-- Modal Cliente -->
<div class="modal fade" id="modalCliente" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Informa√ß√µes do Cliente</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p><strong>Nome:</strong> <span id="clienteNome"></span></p>
                <p><strong>Email:</strong> <span id="clienteEmail"></span></p>
                <p><strong>Telefone:</strong> <span id="clienteTelefone"></span></p>
                <p><strong>Endere√ßo:</strong> <span id="clienteEndereco"></span></p>
                <p><strong>Bairro:</strong> <span id="clienteBairro"></span></p>
                <p><strong>Cidade:</strong> <span id="clienteCidade"></span></p>
                <p><strong>CEP:</strong> <span id="clienteCep"></span></p>
            </div>
        </div>
    </div>
</div>

<!-- Modal Concluir Agendamento -->
<div class="modal fade" id="modalConcluir" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Concluir Agendamento</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h6>Servi√ßos Prestados</h6>
                <div id="servicos-list"></div>
                <hr>
                <h6>Financeiro Pendente</h6>
                <div id="pendentes-list">
                    <p>Nenhum registro pendente encontrado.</p>
                </div>
                <hr>
                <div class="mb-3">
                    <label for="desconto" class="form-label">Desconto (R$):</label>
                    <input type="number" step="0.01" min="0" class="form-control" id="desconto" value="0">
                </div>
                <div class="mb-3">
                    <label for="total" class="form-label">Total (R$):</label>
                    <input type="text" class="form-control" id="total" readonly>
                </div>
                <div class="mb-3">
                    <label for="metodo_pagamento" class="form-label">M√©todo de Pagamento:</label>
                    <select name="metodo_pagamento" id="metodo_pagamento" class="form-control">
                        <option value="dinheiro">Dinheiro</option>
                        <option value="pix">Pix</option>
                        <option value="credito">Cart√£o de Cr√©dito</option>
                        <option value="debito">Cart√£o de D√©bito</option>
                        <option value="pacote_semanal_1">Pacote Semanal 1</option>
                        <option value="pacote_semanal_2">Pacote Semanal 2</option>
                        <option value="pacote_semanal_3">Pacote Semanal 3</option>
                        <option value="pacote_semanal_4">Pacote Semanal 4</option>
                        <option value="pacote_quinzenal">Pacote Quinzenal</option>
                        <option value="pacote_mensal">Pacote Mensal</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer d-flex justify-content-between">
                <div>
                    <button type="button" class="btn btn-warning" id="btn-marcar-pendente" data-id="" data-ja-acionado="false">
                        <i class="bi bi-clock-history"></i> Pagamento Pendente
                    </button>
                </div>
                <div>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                    <button type="button" class="btn btn-primary" id="btn-concluir-pagamento">
                        <i class="bi bi-cash-coin"></i> Concluir Pagamento
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="{{ asset('js/TabelaDefault.js') }}"></script>
<script>
let agendamentosPendentesMarcados = new Set();
let totalOriginal = 0;

document.addEventListener('DOMContentLoaded', function () {
    new TabelaDefault({
        cardContainerId: 'cardContainerAgendamento',
        paginationId: 'paginationAgendamento',
        searchInputId: 'searchInputAgendamento',
        itemsPerPage: 10
    });

    // Modal concluir
    $('.open-concluir-modal').on('click', function(e) {
        e.preventDefault();
        const rota = $(this).data('action');
        const agendamentoId = $(this).data('id');
        $('#btn-marcar-pendente').data('id', agendamentoId);

        fetch(rota, { method: "GET" })
        .then(response => response.json())
        .then(data => {
            if (data.status === "success") {
                const servicosList = $('#servicos-list');
                const pendentesList = $('#pendentes-list');
                const totalInput = $('#total');
                servicosList.empty();
                pendentesList.empty();

                $.each(data.clientes, function(clienteNome, info) {
                    servicosList.append(`<h6>Cliente: ${clienteNome}</h6>`);
                    const ul = $('<ul></ul>');
                    $.each(info.servicos, function(index, servico) {
                        ul.append(`<li>${servico.servico_nome} para ${servico.pet_nome}: R$ ${servico.valor.toFixed(2)}</li>`);
                    });
                    if (data.agendamento.taxi_dog) {
                        const taxaTaxiDog = parseFloat(data.agendamento.taxa_taxi_dog) || 0;
                        ul.append(`<li>T√°xi Dog: R$ ${taxaTaxiDog.toFixed(2)}</li>`);
                    }
                    servicosList.append(ul);
                });

                if (data.pendentes && data.pendentes.length > 0) {
                    const ul = $('<ul></ul>');
                    $.each(data.pendentes, function(index, pendente) {
                        const valorPendente = parseFloat(pendente.valor) || 0;
                        ul.append(`<li>${pendente.descricao}: R$ ${valorPendente.toFixed(2)}</li>`);
                    });
                    pendentesList.html(ul);
                } else {
                    pendentesList.html('<p>Nenhum registro pendente encontrado.</p>');
                }

                totalOriginal = parseFloat(data.total_geral) || 0;
                totalInput.val(totalOriginal.toFixed(2));
                const modalElement = document.getElementById('modalConcluir');
                const modal = new bootstrap.Modal(modalElement);
                modal.show();
            } else {
                Notify.toast("Erro: " + data.mensagem, "danger");
            }
        })
        .catch(error => {
            Notify.toast("Erro ao carregar os dados: " + error.message, "danger");
        });
    });

    // Concluir pagamento
    $('#btn-concluir-pagamento').off('click').on('click', function() {
        const agendamentoId = $('#btn-marcar-pendente').data('id');
        const desconto = parseFloat($('#desconto').val()) || 0;
        const metodoPagamento = $('#metodo_pagamento').val();
        const url = "{{ path('agendamento_concluir_pagamento', {'id': 'AGENDAMENTO_ID'}) }}".replace('AGENDAMENTO_ID', agendamentoId);

        fetch(url, {
            method: "POST",
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: new URLSearchParams({ 'desconto': desconto, 'metodo_pagamento': metodoPagamento })
        })
        .then(response => response.json())
        .then(data => {
            if (data.status === "success") {
                Notify.toast(data.mensagem, "success");
                const modalElement = document.getElementById('modalConcluir');
                const modal = bootstrap.Modal.getInstance(modalElement);
                modal.hide();
                setTimeout(function() { location.reload(); }, 1500);
            } else {
                const mensagemErro = data.mensagem === "Este agendamento j√° foi conclu√≠do anteriormente."
                    ? "Pagamento j√° foi lan√ßado ou conclu√≠do."
                    : data.mensagem || "Erro ao processar o pagamento.";
                Notify.toast(mensagemErro, "danger");
            }
        })
        .catch(error => {
            Notify.toast("Erro ao processar o pagamento: " + error.message, "danger");
        });
    });

    // Atualiza total ao mudar desconto
    $('#desconto').on('input', function() {
        const desconto = parseFloat($(this).val()) || 0;
        const total = totalOriginal - desconto;
        $('#total').val(total.toFixed(2));
    });

    // Modal buscar cliente
    $(document).on('click', '.buscar-cliente', function () {
        var donoId = $(this).data('dono-id');
        var modalCliente = $('#modalCliente');
        if (!donoId) {
            Notify.modal("Erro: Dono ID n√£o encontrado.", 'md', 'Mensagem do sistema');
            return;
        }
        const url = "{{ absolute_url(path('api_buscar_cliente')) }}";
        $.ajax({
            type: 'POST',
            url: url,
            data: { dono_id: donoId },
            dataType: 'json',
            success: function (data) {
                if (data.status === "sucesso") {
                    modalCliente.find('#clienteNome').html(data.cliente.nome || '-');
                    modalCliente.find('#clienteEmail').html(data.cliente.email || '-');
                    modalCliente.find('#clienteTelefone').html(data.cliente.telefone || data.cliente.whatsapp || '-');
                    const endereco = [
                        data.cliente.rua,
                        data.cliente.numero,
                        data.cliente.complemento
                    ].filter(Boolean).join(', ');
                    modalCliente.find('#clienteEndereco').html(endereco || '-');
                    modalCliente.find('#clienteBairro').html(data.cliente.bairro || '-');
                    modalCliente.find('#clienteCidade').html(data.cliente.cidade || '-');
                    modalCliente.find('#clienteCep').html(data.cliente.cep || '-');
                    const modal = new bootstrap.Modal(document.getElementById('modalCliente'));
                    modal.show();
                } else {
                    Notify.toast("Erro: " + data.mensagem, "danger");
                }
            },
            error: function (xhr, status, error) {
                Notify.toast("Erro na requisi√ß√£o: " + error, "danger");
            }
        });
        return false;
    });

    // Deletar agendamento
    $('.reload-form').on('click', function() {
        var rota = $(this).data('action');
        fetch(rota, { method: "POST", body: {} })
        .then(response => response.json())
        .then(data => {
            if (data.status === "success") {
                Notify.toast(data.mensagem, data.status);
            } else {
                Notify.toast("Erro: " + data.mensagem, "danger");
            }
        })
        .catch(error => Notify.toast("Erro na requisi√ß√£o: " + error, "danger"));
    });

    // Alterar pagamento/sa√≠da
    $('.reload-form-select').on('change', function() {
        var rota = $(this).attr('action');
        let formData = new FormData(this);
        fetch(rota, {
            method: "POST",
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.status === "sucesso") {
                Notify.toast(data.mensagem, 'success');
            } else {
                Notify.toast(data.mensagem, 'danger');
            }
        })
        .catch(error => Notify.toast("Erro na requisi√ß√£o: " + error, "danger"));
    });

    // Marcar pagamento pendente
    $('#btn-marcar-pendente').off('click').on('click', function () {
        const botao = $(this);
        const agendamentoId = botao.data('id');
        if (agendamentosPendentesMarcados.has(agendamentoId)) {
            Notify.toast("‚ö†Ô∏è Este agendamento j√° foi marcado como pendente anteriormente.", "warning");
            return;
        }
        const rota = "{{ path('agendamento_executar_acao', {'id': 'ID_PLACEHOLDER', 'acao': 'pendente'}) }}".replace('ID_PLACEHOLDER', agendamentoId);
        fetch(rota, { method: "POST", body: {} })
        .then(response => response.json())
        .then(data => {
            if (data.status === "sucesso") {
                Notify.toast(data.mensagem, 'success');
                agendamentosPendentesMarcados.add(agendamentoId);
                botao.prop('disabled', true);
                const modalElement = document.getElementById('modalConcluir');
                const modal = bootstrap.Modal.getInstance(modalElement);
                modal.hide();
                location.reload();
            } else {
                Notify.toast(data.mensagem || "Erro ao marcar como pendente.", 'danger');
            }
        })
        .catch(error => Notify.toast("Erro na requisi√ß√£o: " + error.message, 'danger'));
    });
});
</script>
{% endblock %}
