{% extends 'base.html.twig' %}

{% block page_title %}<i class="bi bi-briefcase-fill me-2"></i> Servi√ßos{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .icon-pets {
        font-size: 2rem;
        margin: 0 8px;
    }
    .floating-title {
        background-color: #ffffff;
        padding: 20px 40px;
        border-radius: 15px;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
        display: inline-block;
        animation: floatIn 0.6s ease;
    }
    @keyframes floatIn {
        from { transform: translateY(-20px); opacity: 0; }
        to   { transform: translateY(0);     opacity: 1; }
    }
    .card-item { transition: box-shadow 0.2s; }
    .card-item:hover { box-shadow: 0 0 0 4px #e5eefe; }
    .valor-label { font-size: 1.1rem; color: #198754; font-weight: bold; }
    .pagination-wrapper { display: flex; justify-content: center; gap: 10px; margin-top: 30px; }
    .pagination-wrapper button {
        background-color: #fff; border: 1px solid #dee2e6; color: #0d6efd;
        padding: 6px 16px; border-radius: 999px; cursor: pointer;
    }
    .pagination-wrapper button.active {
        background-color: #0d6efd; color: #fff; font-weight: bold; border: 1px solid #0a58ca;
    }
</style>
{% endblock %}

{% block body %}
<div class="container mt-5">
    <div class="text-center mb-4">
        <h1 class="floating-title">
            <span class="icon-pets">üê∂</span>
            Servi√ßos
            <span class="icon-pets">üê±</span>
        </h1>
    </div>

    <p class="mb-4 text-center">
        <span class="icon-pets">üêæ</span> Lista de servi√ßos oferecidos
    </p>

    <div class="text-end mb-4">
        <a href="{{ path('servico_novo') }}" class="btn btn-primary">‚ûï Novo Servi√ßo</a>
    </div>

    {# Campo de busca #}
    <div class="row mb-3">
        <div class="col-12">
            <input type="text" id="searchInput" class="form-control form-control-md"
                   placeholder="üîç Pesquisar por nome ou descri√ß√£o..." />
        </div>
    </div>

    {# seletor de filtro de tipo de servi√ßo #}
    <div class="row mb-4">
        <div class="col-md-4">
            <select id="filter-type" class="form-select">
                <option value="">Todos os tipos</option>
                <option value="clinica">Cl√≠nica Veterin√°ria</option>
                <option value="pet_shop">Pet Shop</option>
            </select>
        </div>
    </div>

    <div id="cardContainer" class="row gy-3">
        {% for servico in servicos %}
            <div class="col-12 card-item"
                 data-search="{{ servico.nome|lower }} {{ servico.descricao|lower }} {{ servico.tipo }}"
                 data-type="{{ servico.tipo }}">
                <div class="card shadow-lg border-0 rounded-3">
                    <div class="card-body p-3">
                        <div class="d-flex justify-content-between align-items-center flex-wrap gap-2">
                            <div class="flex-grow-1">
                                <h5 class="card-title mb-1">{{ servico.nome }}</h5>
                                <p class="card-text text-muted mb-1">{{ servico.descricao }}</p>
                                <p class="valor-label">üí∞ R$ {{ servico.valor|number_format(2, ',', '.') }}</p>
                            </div>
                            <div class="d-flex align-items-center gap-1">
                                <div class="dropdown">
                                    <button class="btn btn-secondary btn-sm dropdown-toggle" type="button"
                                            data-bs-toggle="dropdown">
                                        A√ß√£o
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-end">
                                        <li>
                                            <a href="{{ path('servico_editar', {'id': servico.id}) }}"
                                               class="dropdown-item">Editar</a>
                                        </li>
                                            <li>
                                                <form method="post"
                                                      action="{{ path('servico_deletar', {'id': servico.id}) }}"
                                                      class="d-inline">
                                                    <button type="submit" class="dropdown-item text-danger"
                                                            onclick="return confirm('Tem certeza que deseja deletar este servi√ßo?')">
                                                        Deletar
                                                    </button>
                                                </form>
                                            </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        {% else %}
            <div class="col-12">
                <div class="alert alert-info text-center mb-0">Nenhum servi√ßo encontrado.</div>
            </div>
        {% endfor %}
    </div>

    <div class="pagination-wrapper" id="pagination"></div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function () {
    const cards       = Array.from(document.querySelectorAll('.card-item'));
    const searchInput = document.getElementById('searchInput');
    const filterSelect= document.getElementById('filter-type');
    const pagination  = document.getElementById('pagination');
    const perPage     = 6;
    let currentPage   = 1;
    let filteredCards = cards.slice();

    function updateFilteredCards() {
        const query = searchInput.value.toLowerCase();
        const type  = filterSelect.value;
        filteredCards = [];
        cards.forEach(card => {
            const searchText = card.getAttribute('data-search');
            const cardType   = card.getAttribute('data-type');
            const matchesSearch = searchText.includes(query);
            const matchesType   = !type || cardType === type;
            if (matchesSearch && matchesType) {
                filteredCards.push(card);
            }
            // Oculta tudo por enquanto, ser√° exibido na renderPage
            card.style.display = 'none';
        });
    }

    function renderPage(page) {
        currentPage = page;
        const start = (page - 1) * perPage;
        const end   = page * perPage;

        // Oculta todos primeiro
        cards.forEach(card => {
            card.style.display = 'none';
        });

        // Mostra apenas os filtrados da p√°gina atual
        filteredCards.slice(start, end).forEach(card => {
            card.style.display = 'block';
        });

        renderPagination();
    }

    function renderPagination() {
        const totalPages = Math.ceil(filteredCards.length / perPage);
        pagination.innerHTML = '';
        if (totalPages <= 1) return;

        if (currentPage > 1) {
            const prev = document.createElement('button');
            prev.textContent = '‚óÄÔ∏è';
            prev.addEventListener('click', () => renderPage(currentPage - 1));
            pagination.appendChild(prev);
        }

        let startPage = Math.max(currentPage - 1, 1);
        let endPage   = Math.min(startPage + 3, totalPages);
        if (endPage - startPage < 3 && startPage > 1) {
            startPage = Math.max(endPage - 3, 1);
        }

        for (let i = startPage; i <= endPage; i++) {
            const btn = document.createElement('button');
            btn.textContent = i;
            btn.classList.toggle('active', i === currentPage);
            btn.addEventListener('click', () => renderPage(i));
            pagination.appendChild(btn);
        }

        if (currentPage < totalPages) {
            const next = document.createElement('button');
            next.textContent = '‚ñ∂Ô∏è';
            next.addEventListener('click', () => renderPage(currentPage + 1));
            pagination.appendChild(next);
        }
    }

    // Eventos de busca e filtro
    searchInput.addEventListener('input', () => {
        updateFilteredCards();
        renderPage(1);
    });

    filterSelect.addEventListener('change', () => {
        updateFilteredCards();
        renderPage(1);
    });

    // Inicializa
    updateFilteredCards();
    renderPage(1);
});
</script>
{% endblock %}
